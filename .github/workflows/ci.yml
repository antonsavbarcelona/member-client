name: SSR CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps

      - name: Lint & unit tests
        run: npx nx run-many -t lint test

      - name: Build SSR bundle
        run: npx nx build-ssr member-client

      - name: Evaluate render policy
        id: render-policy
        run: |
          POLICY=$(node tools/scripts/render-policy.mjs)
          echo "$POLICY" > render-policy.json
          ROUTES=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('render-policy.json','utf8')); const routes = (data.ssgRoutes || []).filter((route) => !route.includes('(')); process.stdout.write(routes.join(','));")
          COUNT=$(node -e "const fs = require('fs'); const data = JSON.parse(fs.readFileSync('render-policy.json','utf8')); const routes = (data.ssgRoutes || []).filter((route) => !route.includes('(')); console.log(routes.length);")
          if [ "$COUNT" -gt 0 ]; then
            echo "has-ssg=true" >> $GITHUB_OUTPUT
          else
            echo "has-ssg=false" >> $GITHUB_OUTPUT
          fi
          printf 'routes=%s\n' "$ROUTES" >> $GITHUB_OUTPUT

      - name: Prerender (SSG)
        if: steps.render-policy.outputs.has-ssg == 'true'
        run: npx nx prerender member-client --routes "${{ steps.render-policy.outputs.routes }}"

      - name: SSR smoke test
        run: npm run smoke:ssr
